{"version":3,"file":"main.js","mappings":"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","sources":["webpack://weather-app/webpack/runtime/async module","webpack://weather-app/./src/style.css","webpack://weather-app/./node_modules/css-loader/dist/runtime/api.js","webpack://weather-app/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://weather-app/./src/style.css?7163","webpack://weather-app/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://weather-app/./src/api.js","webpack://weather-app/./src/utils.js","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://weather-app/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://weather-app/./node_modules/date-fns/constants.mjs","webpack://weather-app/./node_modules/date-fns/toDate.mjs","webpack://weather-app/./node_modules/date-fns/startOfDay.mjs","webpack://weather-app/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://weather-app/./node_modules/date-fns/constructFrom.mjs","webpack://weather-app/./node_modules/date-fns/getDayOfYear.mjs","webpack://weather-app/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://weather-app/./node_modules/date-fns/startOfYear.mjs","webpack://weather-app/./node_modules/date-fns/startOfWeek.mjs","webpack://weather-app/./node_modules/date-fns/startOfISOWeek.mjs","webpack://weather-app/./node_modules/date-fns/getISOWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/getISOWeek.mjs","webpack://weather-app/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/getWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/getWeek.mjs","webpack://weather-app/./node_modules/date-fns/startOfWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://weather-app/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://weather-app/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://weather-app/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://weather-app/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://weather-app/./node_modules/date-fns/isValid.mjs","webpack://weather-app/./node_modules/date-fns/isDate.mjs","webpack://weather-app/./node_modules/date-fns/format.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/Setter.mjs","webpack://weather-app/./node_modules/date-fns/transpose.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/constants.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/utils.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/DateParser.mjs","webpack://weather-app/./node_modules/date-fns/addDays.mjs","webpack://weather-app/./node_modules/date-fns/setDay.mjs","webpack://weather-app/./node_modules/date-fns/setISODay.mjs","webpack://weather-app/./node_modules/date-fns/getISODay.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/EraParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/YearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/QuarterParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/MonthParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.mjs","webpack://weather-app/./node_modules/date-fns/setWeek.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs","webpack://weather-app/./node_modules/date-fns/setISOWeek.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/DayParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/AMPMParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/MinuteParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/SecondParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs","webpack://weather-app/./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.mjs","webpack://weather-app/./node_modules/date-fns/parse.mjs","webpack://weather-app/./node_modules/date-fns/getDefaultOptions.mjs","webpack://weather-app/./src/dom.js","webpack://weather-app/./src/index.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/compat get default export","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/nonce","webpack://weather-app/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background-image: linear-gradient(rgb(76, 192, 238), lightskyblue);\n  box-sizing: border-box;\n}\n\nheader {\n  display: flex;\n  justify-content: center;\n  color: white;\n  padding: 20px;\n  font-size: 20px;\n}\n\n.logo {\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n}\n\n.fa-cloud-meatball {\n  margin-right: 10px;\n  font-size: 30px;\n}\n\nmain {\n  flex: 1;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nfooter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 0px;\n  gap: 5px;\n  background-color: transparent;\n  font-size: 18px;\n  color: white;\n  font-weight: 600;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\nsvg {\n  height: 180px;\n}\n\n.loader {\n  display: none;\n  align-self: center;\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid black;\n  width: 60px;\n  height: 60px;\n  -webkit-animation: spin 2s linear infinite; /* Safari */\n  animation: spin 2s linear infinite;\n}\n\n/* Safari */\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.error-msg {\n  display: none;\n  color: red;\n  font-weight: 600;\n  font-size: 18px;\n}\n\n.container {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  border-radius: 10px;\n  padding: 25px 30px;\n  text-align: center;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n}\n\n.fa-location-dot {\n  font-size: 25px;\n}\n\n.form {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n  align-self: center;\n}\n\n.search-input {\n  padding: 10px;\n  font-size: 18px;\n  margin: 0px 10px;\n  border-radius: 15px;\n  font-weight: 600;\n  background-color: #e8f0fe;\n}\n\n.search-input:focus {\n  border: 0;\n  outline: 1px solid black;\n}\n\n.submit-btn {\n  cursor: pointer;\n  background-color: inherit;\n  font-size: 18px;\n  text-align: center;\n  border-radius: 50%;\n  padding: 10px;\n  background-color: rgb(180, 221, 246);\n}\n\n.submit-btn:hover {\n  background-color: lightskyblue;\n}\n\n.location-header {\n  font-size: 30px;\n  margin-bottom: 5px;\n}\n\n.datetime-header {\n  margin-bottom: 20px;\n}\n\n.weather-icon-container {\n  margin-bottom: 20px;\n}\n\n.temperature-header {\n  font-size: 40px;\n}\n\n.weather-condition-p {\n  font-weight: 550;\n  font-size: 24px;\n}\n\n.feels-like-p {\n  font-weight: 500;\n  font-size: 22px;\n  margin-bottom: 15px;\n}\n\n.weather-conditions-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  text-align: center;\n  gap: 20px;\n  font-size: 18px;\n}\n\n#uv-index {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n}\n\n.uv-index-color {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  border-radius: 50%;\n  height: 28px;\n  width: 28px;\n  color: white;\n  font-weight: 600;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT,UAAU;EACV,SAAS;EACT,yCAAyC;AAC3C;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,kEAAkE;EAClE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,OAAO;EACP,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,iBAAiB;EACjB,QAAQ;EACR,6BAA6B;EAC7B,eAAe;EACf,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,yBAAyB;EACzB,kBAAkB;EAClB,2BAA2B;EAC3B,WAAW;EACX,YAAY;EACZ,0CAA0C,EAAE,WAAW;EACvD,kCAAkC;AACpC;;AAEA,WAAW;AACX;EACE;IACE,+BAA+B;EACjC;EACA;IACE,iCAAiC;EACnC;AACF;;AAEA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF;;AAEA;EACE,aAAa;EACb,UAAU;EACV,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,2CAA2C;AAC7C;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,gBAAgB;EAChB,mBAAmB;EACnB,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,SAAS;EACT,wBAAwB;AAC1B;;AAEA;EACE,eAAe;EACf,yBAAyB;EACzB,eAAe;EACf,kBAAkB;EAClB,kBAAkB;EAClB,aAAa;EACb,oCAAoC;AACtC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,kBAAkB;EAClB,SAAS;EACT,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,gBAAgB;AAClB\",\"sourcesContent\":[\"* {\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nbody {\\n  min-height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  background-image: linear-gradient(rgb(76, 192, 238), lightskyblue);\\n  box-sizing: border-box;\\n}\\n\\nheader {\\n  display: flex;\\n  justify-content: center;\\n  color: white;\\n  padding: 20px;\\n  font-size: 20px;\\n}\\n\\n.logo {\\n  display: flex;\\n  text-align: center;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.fa-cloud-meatball {\\n  margin-right: 10px;\\n  font-size: 30px;\\n}\\n\\nmain {\\n  flex: 1;\\n  height: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nfooter {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 20px 0px;\\n  gap: 5px;\\n  background-color: transparent;\\n  font-size: 18px;\\n  color: white;\\n  font-weight: 600;\\n}\\n\\na {\\n  color: inherit;\\n  text-decoration: none;\\n}\\n\\nsvg {\\n  height: 180px;\\n}\\n\\n.loader {\\n  display: none;\\n  align-self: center;\\n  border: 8px solid #f3f3f3;\\n  border-radius: 50%;\\n  border-top: 8px solid black;\\n  width: 60px;\\n  height: 60px;\\n  -webkit-animation: spin 2s linear infinite; /* Safari */\\n  animation: spin 2s linear infinite;\\n}\\n\\n/* Safari */\\n@-webkit-keyframes spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes spin {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n.error-msg {\\n  display: none;\\n  color: red;\\n  font-weight: 600;\\n  font-size: 18px;\\n}\\n\\n.container {\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-direction: column;\\n  background-color: white;\\n  border-radius: 10px;\\n  padding: 25px 30px;\\n  text-align: center;\\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\\n}\\n\\n.fa-location-dot {\\n  font-size: 25px;\\n}\\n\\n.form {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 15px;\\n  align-self: center;\\n}\\n\\n.search-input {\\n  padding: 10px;\\n  font-size: 18px;\\n  margin: 0px 10px;\\n  border-radius: 15px;\\n  font-weight: 600;\\n  background-color: #e8f0fe;\\n}\\n\\n.search-input:focus {\\n  border: 0;\\n  outline: 1px solid black;\\n}\\n\\n.submit-btn {\\n  cursor: pointer;\\n  background-color: inherit;\\n  font-size: 18px;\\n  text-align: center;\\n  border-radius: 50%;\\n  padding: 10px;\\n  background-color: rgb(180, 221, 246);\\n}\\n\\n.submit-btn:hover {\\n  background-color: lightskyblue;\\n}\\n\\n.location-header {\\n  font-size: 30px;\\n  margin-bottom: 5px;\\n}\\n\\n.datetime-header {\\n  margin-bottom: 20px;\\n}\\n\\n.weather-icon-container {\\n  margin-bottom: 20px;\\n}\\n\\n.temperature-header {\\n  font-size: 40px;\\n}\\n\\n.weather-condition-p {\\n  font-weight: 550;\\n  font-size: 24px;\\n}\\n\\n.feels-like-p {\\n  font-weight: 500;\\n  font-size: 22px;\\n  margin-bottom: 15px;\\n}\\n\\n.weather-conditions-container {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  text-align: center;\\n  gap: 20px;\\n  font-size: 18px;\\n}\\n\\n#uv-index {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n}\\n\\n.uv-index-color {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n  border-radius: 50%;\\n  height: 28px;\\n  width: 28px;\\n  color: white;\\n  font-weight: 600;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// Get weather forecast data on a location by using weather.visualcrossing.com API\nasync function getLocationForecastData(location) {\n  // Promise implementation\n  /* \n    fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}?unitGroup=us&key=FNMEC42CA9CLAVPZ58JSRLYG8`, {mode: 'cors'})\n        .then(function(response) {\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return response.json();\n        })\n        .then(data => {\n            console.log(data);\n        })\n        .catch(error => {\n            console.error('There was a problem with the fetch operation:', error);\n        }); \n    */\n\n  // Async/Await Implementation\n  const APIkey = 'FNMEC42CA9CLAVPZ58JSRLYG8';\n  const response = await fetch(\n    `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}/next7days?unitGroup=metric&key=${APIkey}`,\n    { mode: 'cors' },\n  );\n\n  if (!response.ok) {\n    throw new Error('Location not found.');\n  }\n  const forecastData = await response.json();\n  console.log(forecastData);\n  return forecastData;\n}\n\nexport default getLocationForecastData;\n","// Get UV color\nfunction getUVColor(UVIndex) {\n  if (UVIndex >= 0 && UVIndex <= 2) {\n    return '#9CC600';\n  } else if (UVIndex >= 3 && UVIndex <= 5) {\n    return '#FFBC01';\n  } else if (UVIndex >= 6 && UVIndex <= 7) {\n    return '#FF9000';\n  } else if (UVIndex >= 8 && UVIndex <= 9) {\n    return '#F55023';\n  } else if (UVIndex >= 10) {\n    return '#9E47CC';\n  }\n}\n\n// Object that links weather conditions to their corresponding icons\nconst weatherIcons = {\n  snow: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 79.62 80.58\"><defs><style>.cls-1{fill:#cae3f6;}.cls-2,.cls-3,.cls-4{fill:none;stroke-miterlimit:10;}.cls-2,.cls-3{stroke:#000;}.cls-2{stroke-width:1.5px;}.cls-3{stroke-width:2px;}.cls-4{stroke:#0a0b0b;stroke-width:4px;}</style></defs><title>snowAsset 176colored</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M58.62,39.79H9.71a6.89,6.89,0,0,1-5.55-3.41,9,9,0,0,1,8.42-13.85c1.47.08,1.78-.47,2-1.71A22.62,22.62,0,0,1,33,2l.11,0a22.28,22.28,0,0,1,15,3.22,15.43,15.43,0,0,1,1.31.91,23.1,23.1,0,0,1,6.07,7l.71,1.21\"/><path class=\"cls-1\" d=\"M35.31,27.27A9.77,9.77,0,0,1,43,19a10.75,10.75,0,0,1,1.91-.14,9.86,9.86,0,0,1,6.75,2.65A9.55,9.55,0,0,1,54.36,26\"/><path class=\"cls-1\" d=\"M48.52,19.47c2.83-4.43,9.34-6.06,14.54-5a11.88,11.88,0,0,1,9.41,9.23c.67,2.91.88,4,3.09,5.58,3.16,2.22,2.94,7.18.38,9.52a3.92,3.92,0,0,1-2.44,1H56.58\"/><line class=\"cls-1\" x1=\"62.05\" y1=\"39.79\" x2=\"67.11\" y2=\"39.79\"/><polyline class=\"cls-2\" points=\"48.16 79.41 50.66 76.78 53.11 79.34\"/><polyline class=\"cls-2\" points=\"53.11 69.11 50.62 71.74 48.16 69.19\"/><line class=\"cls-2\" x1=\"50.62\" y1=\"67.86\" x2=\"50.62\" y2=\"80.58\"/><polyline class=\"cls-2\" points=\"55.83 76.7 53.2 74.2 55.75 71.74\"/><polyline class=\"cls-2\" points=\"45.53 71.74 48.16 74.24 45.61 76.7\"/><line class=\"cls-2\" x1=\"44.27\" y1=\"74.24\" x2=\"57\" y2=\"74.24\"/><polyline class=\"cls-2\" points=\"28.51 79.41 31 76.78 33.46 79.34\"/><polyline class=\"cls-2\" points=\"33.46 69.11 30.97 71.74 28.51 69.19\"/><line class=\"cls-2\" x1=\"30.97\" y1=\"67.86\" x2=\"30.97\" y2=\"80.58\"/><polyline class=\"cls-2\" points=\"36.18 76.7 33.55 74.2 36.1 71.74\"/><polyline class=\"cls-2\" points=\"25.88 71.74 28.51 74.24 25.96 76.7\"/><line class=\"cls-2\" x1=\"24.62\" y1=\"74.24\" x2=\"37.35\" y2=\"74.24\"/><polyline class=\"cls-3\" points=\"64.59 62.86 68.03 59.24 71.41 62.76\"/><polyline class=\"cls-3\" points=\"71.41 48.68 67.98 52.3 64.59 48.78\"/><line class=\"cls-3\" x1=\"67.98\" y1=\"46.94\" x2=\"67.98\" y2=\"64.47\"/><polyline class=\"cls-3\" points=\"75.16 59.12 71.53 55.68 75.05 52.3\"/><polyline class=\"cls-3\" points=\"60.97 52.3 64.59 55.74 61.08 59.12\"/><line class=\"cls-3\" x1=\"59.24\" y1=\"55.74\" x2=\"76.77\" y2=\"55.74\"/><polyline class=\"cls-3\" points=\"37.53 62.86 40.97 59.24 44.35 62.76\"/><polyline class=\"cls-3\" points=\"44.35 48.68 40.91 52.3 37.53 48.78\"/><line class=\"cls-3\" x1=\"40.91\" y1=\"46.94\" x2=\"40.91\" y2=\"64.47\"/><polyline class=\"cls-3\" points=\"48.09 59.12 44.47 55.68 47.98 52.3\"/><polyline class=\"cls-3\" points=\"33.91 52.3 37.53 55.74 34.01 59.12\"/><line class=\"cls-3\" x1=\"32.17\" y1=\"55.74\" x2=\"49.7\" y2=\"55.74\"/><polyline class=\"cls-3\" points=\"10.46 62.86 13.9 59.24 17.29 62.76\"/><polyline class=\"cls-3\" points=\"17.29 48.68 13.85 52.3 10.46 48.78\"/><line class=\"cls-3\" x1=\"13.85\" y1=\"46.94\" x2=\"13.85\" y2=\"64.47\"/><polyline class=\"cls-3\" points=\"21.03 59.12 17.4 55.68 20.92 52.3\"/><polyline class=\"cls-3\" points=\"6.84 52.3 10.46 55.74 6.95 59.12\"/><line class=\"cls-3\" x1=\"5.11\" y1=\"55.74\" x2=\"22.64\" y2=\"55.74\"/><path class=\"cls-4\" d=\"M58.22,39.72H9a7,7,0,0,1-5.59-3.38,9,9,0,0,1-.38-9,9.25,9.25,0,0,1,8.86-4.71c1.48.08,1.79-.46,2-1.69A22.6,22.6,0,0,1,32.47,2.24h.12A22.69,22.69,0,0,1,47.66,5.42q.66.41,1.32.9a23.26,23.26,0,0,1,6.11,6.91l.71,1.2\"/><path class=\"cls-4\" d=\"M34.77,27.31a9.73,9.73,0,0,1,7.77-8.2A10.79,10.79,0,0,1,44.46,19a10.05,10.05,0,0,1,6.79,2.62,9.68,9.68,0,0,1,2.69,4.49\"/><path class=\"cls-4\" d=\"M48.06,19.57c2.85-4.38,9.4-6,14.63-4.92a11.85,11.85,0,0,1,9.47,9.15c.67,2.89.88,4,3.11,5.53,3.18,2.2,3,7.12.39,9.44a4,4,0,0,1-2.47.95H70\"/><line class=\"cls-4\" x1=\"61.67\" y1=\"39.72\" x2=\"66.77\" y2=\"39.72\"/></g></g></svg>',\n  rain: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 84.06 69.39\"><defs><style>.cls-1{fill:#cae3f6;}.cls-2,.cls-3{fill:none;stroke-miterlimit:10;}.cls-2{stroke:#000;stroke-linecap:round;stroke-width:3px;}.cls-3{stroke:#0a0b0b;stroke-width:4px;}</style></defs><title>rainAsset 162colored</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M61.52,42.12H9.42c-2.18,0-5.08-1.72-5.91-3.59A9.47,9.47,0,0,1,3.1,29a9.79,9.79,0,0,1,9.38-5c1.57.08,1.89-.49,2.09-1.8A23.9,23.9,0,0,1,34.26,2.44l.12,0a24,24,0,0,1,16,3.38c.47.29.94.6,1.4,1a24.37,24.37,0,0,1,6.46,7.32L59,15.34\"/><path class=\"cls-1\" d=\"M36.7,29a10.32,10.32,0,0,1,8.22-8.68,13.4,13.4,0,0,1,2-.15,10.68,10.68,0,0,1,7.19,2.78A10.16,10.16,0,0,1,57,27.68\"/><path class=\"cls-1\" d=\"M50.77,20.78c3-4.64,9.95-6.35,15.49-5.21a12.57,12.57,0,0,1,10,9.69c.7,3,.93,4.22,3.29,5.85,3.36,2.33,3.12,7.54.4,10a4.26,4.26,0,0,1-2.6,1h-18\"/><line class=\"cls-1\" x1=\"65.18\" y1=\"42.11\" x2=\"70.57\" y2=\"42.11\"/><line class=\"cls-2\" x1=\"67.9\" y1=\"62.01\" x2=\"61.69\" y2=\"67.89\"/><line class=\"cls-2\" x1=\"25.68\" y1=\"62.01\" x2=\"19.48\" y2=\"67.89\"/><line class=\"cls-2\" x1=\"46.79\" y1=\"62.01\" x2=\"40.59\" y2=\"67.89\"/><line class=\"cls-2\" x1=\"67.9\" y1=\"49.22\" x2=\"61.69\" y2=\"55.1\"/><line class=\"cls-2\" x1=\"25.68\" y1=\"49.22\" x2=\"19.48\" y2=\"55.1\"/><line class=\"cls-2\" x1=\"46.79\" y1=\"49.22\" x2=\"40.59\" y2=\"55.1\"/><path class=\"cls-3\" d=\"M61.52,41.94H9.42c-2.18,0-5.08-1.72-5.91-3.58A9.49,9.49,0,0,1,3.1,28.8a9.79,9.79,0,0,1,9.38-5c1.57.08,1.89-.49,2.09-1.79A23.9,23.9,0,0,1,34.26,2.26l.12,0a24.08,24.08,0,0,1,16,3.38c.47.29.94.61,1.4,1a24.49,24.49,0,0,1,6.46,7.32L59,15.16\"/><path class=\"cls-3\" d=\"M36.7,28.79a10.31,10.31,0,0,1,8.22-8.67A12.28,12.28,0,0,1,47,20a10.64,10.64,0,0,1,7.19,2.79A10.08,10.08,0,0,1,57,27.5\"/><path class=\"cls-3\" d=\"M50.77,20.61c3-4.65,9.95-6.36,15.49-5.22a12.58,12.58,0,0,1,10,9.69c.7,3.06.93,4.22,3.29,5.86,3.36,2.32,3.12,7.53.4,10a4.26,4.26,0,0,1-2.6,1H74\"/><line class=\"cls-3\" x1=\"65.18\" y1=\"41.93\" x2=\"70.57\" y2=\"41.93\"/></g></g></svg>',\n  fog: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 76.24 48.01\"><defs><style>.cls-1{fill:#e5f1fb;}.cls-2,.cls-3{fill:none;stroke:#231f20;stroke-miterlimit:10;}.cls-2{stroke-width:4px;}.cls-3{stroke-width:5px;}</style></defs><title>11Asset 224FOG</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M74.64,24.71a10.83,10.83,0,0,0-.34-2.85,10.18,10.18,0,0,0-2-3.82,9.64,9.64,0,0,0-2.48-2.33,10.51,10.51,0,0,0-4.25-1.58c-.21,0-.46-.33-.56-.56A10.34,10.34,0,0,0,54,6.76a17.86,17.86,0,0,0-3.65,1,1.09,1.09,0,0,1-1.21-.43,12.63,12.63,0,0,0-6.85-4.9c-.37-.11-.74-.22-1.13-.3a10.7,10.7,0,0,0-3-.19c-.45,0-.87.09-1.23.15a12,12,0,0,0-1.19.24l-.13,0A21.68,21.68,0,0,0,31.3,4.48,30.34,30.34,0,0,0,27.78,8l-.11,0a11.55,11.55,0,0,0-5.32-1.38,9.74,9.74,0,0,0-4.7,1.13,11.14,11.14,0,0,0-4.87,5.24A2.19,2.19,0,0,1,11.4,14a11.23,11.23,0,0,0-2.91,1,9.68,9.68,0,0,0-3.66,3.29c-.15.22-.3.44-.43.67A12.12,12.12,0,0,0,3,22.49a8.66,8.66,0,0,0-.14,2.22Z\"/><path class=\"cls-2\" d=\"M2.49,34.1l3.15-4a5.14,5.14,0,0,1,8.66.94l.87,1.79a5.14,5.14,0,0,0,8.92.58L26,30.49a5.15,5.15,0,0,1,8.85.43L35.42,32a5.14,5.14,0,0,0,9.17-.15l0-.09a5.15,5.15,0,0,1,9.15-.2h0a5.14,5.14,0,0,0,9.07-.05l.12-.23a5.14,5.14,0,0,1,9.17.14l1.4,2.87\"/><path class=\"cls-2\" d=\"M2.49,44.38l3.15-4a5.14,5.14,0,0,1,8.66.93l.87,1.8a5.14,5.14,0,0,0,8.92.58L26,40.77a5.15,5.15,0,0,1,8.85.43l.56,1.06a5.14,5.14,0,0,0,9.17-.14l0-.1a5.15,5.15,0,0,1,9.15-.19h0a5.14,5.14,0,0,0,9.07,0l.12-.24a5.14,5.14,0,0,1,9.17.15l1.4,2.86\"/><path class=\"cls-3\" d=\"M73.74,24.78a11,11,0,0,0-.35-2.63,9.69,9.69,0,0,0-1.72-3.46,10.33,10.33,0,0,0-3.24-2.93,10.58,10.58,0,0,0-3.7-1.24,1,1,0,0,1-.56-.55c-2-4.68-6-7.21-11-6.7a16,16,0,0,0-3.35.89,1.39,1.39,0,0,1-1.58-.49A12.29,12.29,0,0,0,43.64,3.8,12.73,12.73,0,0,0,41.55,3c-.37-.11-.74-.21-1.12-.29a10.55,10.55,0,0,0-3-.17,12,12,0,0,0-1.22.15A11,11,0,0,0,34.94,3a22.08,22.08,0,0,0-4.32,2.16,30,30,0,0,0-3.48,3.47L27,8.53a11.58,11.58,0,0,0-5.3-1.35,9.79,9.79,0,0,0-4.65,1.15,11.08,11.08,0,0,0-5,5.62,1.12,1.12,0,0,1-.76.6A11.42,11.42,0,0,0,8,15.63a9.84,9.84,0,0,0-3.61,3.28c-.14.22-.29.44-.43.68a12.13,12.13,0,0,0-1.33,3.53,8.39,8.39,0,0,0-.15,1.61\"/></g></g></svg>',\n  wind: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 94.85 66.53\"><defs><style>.cls-1{fill:#cae3f6;}.cls-2,.cls-3{fill:none;stroke-miterlimit:10;}.cls-2{stroke:#000;stroke-linecap:round;stroke-width:3px;}.cls-3{stroke:#0a0b0b;stroke-width:4px;}</style></defs><title>windAsset 169colored</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M58.31,39.74H9.59a6.88,6.88,0,0,1-5.53-3.4,9,9,0,0,1,8.39-13.79c1.47.07,1.77-.47,2-1.71A22.53,22.53,0,0,1,32.82,2.08l.11,0A22.24,22.24,0,0,1,47.85,5.27c.44.27.88.58,1.31.9a23.18,23.18,0,0,1,6,7l.71,1.21\"/><path class=\"cls-1\" d=\"M35.09,27.27A9.73,9.73,0,0,1,42.78,19a11.72,11.72,0,0,1,1.9-.15,9.88,9.88,0,0,1,6.72,2.64A9.57,9.57,0,0,1,54.07,26\"/><path class=\"cls-1\" d=\"M48.25,19.49c2.82-4.4,9.31-6,14.48-4.95a11.85,11.85,0,0,1,9.38,9.2c.66,2.9.87,4,3.08,5.56,3.14,2.21,2.92,7.15.38,9.48a3.87,3.87,0,0,1-2.44.95H56.28\"/><line class=\"cls-1\" x1=\"61.72\" y1=\"39.73\" x2=\"66.77\" y2=\"39.73\"/><path class=\"cls-2\" d=\"M58.7,53.08c-2.65,0-5.3,0-8,0\"/><path class=\"cls-2\" d=\"M50.75,47.79c1.43,0,2.87,0,4.31,0\"/><path class=\"cls-2\" d=\"M61,47.8q12.51,0,25,0a7.38,7.38,0,0,0,6.33-3.15,5.85,5.85,0,0,0-1.27-8,4.44,4.44,0,0,0-5.76.49,3.29,3.29,0,0,0,0,4.57,2.36,2.36,0,0,0,3.34.1\"/><path class=\"cls-2\" d=\"M75.85,59.15a2.48,2.48,0,0,0-3-.43,3.25,3.25,0,0,0-1.42,3.05A3.91,3.91,0,0,0,74.77,65a4.83,4.83,0,0,0,5.42-3.65,6.07,6.07,0,0,0-3-7.13,8,8,0,0,0-4.07-1.1H64.4\"/><path class=\"cls-3\" d=\"M58.22,39.72H9a7,7,0,0,1-5.59-3.38,9,9,0,0,1-.38-9,9.25,9.25,0,0,1,8.86-4.71c1.48.08,1.79-.46,2-1.69A22.6,22.6,0,0,1,32.47,2.24h.12A22.69,22.69,0,0,1,47.66,5.42q.66.41,1.32.9a23.26,23.26,0,0,1,6.11,6.91l.71,1.2\"/><path class=\"cls-3\" d=\"M34.77,27.31a9.73,9.73,0,0,1,7.77-8.2A10.79,10.79,0,0,1,44.46,19a10.05,10.05,0,0,1,6.79,2.62,9.68,9.68,0,0,1,2.69,4.49\"/><path class=\"cls-3\" d=\"M48.06,19.57c2.85-4.38,9.4-6,14.63-4.92a11.85,11.85,0,0,1,9.47,9.15c.67,2.89.88,4,3.11,5.53,3.18,2.2,3,7.12.39,9.44a4,4,0,0,1-2.47.95H70\"/><line class=\"cls-3\" x1=\"61.67\" y1=\"39.72\" x2=\"66.77\" y2=\"39.72\"/></g></g></svg>',\n  cloudy:\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 115.07 60.7\"><defs><style>.cls-1{fill:#aac7d5;}.cls-2{fill:#cae3f6;}.cls-3{fill:none;stroke:#000;stroke-miterlimit:10;stroke-width:4px;}</style></defs><title>cloudyAsset 183colored</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M76.77,50.17a1.29,1.29,0,0,1,.77-.47,24.92,24.92,0,0,0,11.14-4.1c6.44,4.75,11.95,5.4,17.45,2.13,4.78-2.85,7.7-8.5,6.76-13.84-1.38-8-6.52-12-14.43-12.58C95.82,11.46,89.79,4.89,79.75,3.09,68,1,59.45,6.14,53.73,16.33\"/><path class=\"cls-2\" d=\"M63.32,30,63,30a24,24,0,0,0-47,.87q-.44,0-.87,0a14.06,14.06,0,0,0-5.53,1.6A14.44,14.44,0,0,0,7.2,34.07a14.06,14.06,0,0,0-1.17,1A10.11,10.11,0,0,0,4,37.61,13.24,13.24,0,0,0,2.84,40C.28,48,4,53.91,8.23,56.76s11.5,4,17.85-1.57a24,24,0,0,0,27,0A14.67,14.67,0,1,0,63.32,30Z\"/><path class=\"cls-3\" d=\"M76.77,49.53a1.32,1.32,0,0,1,.77-.46A24.92,24.92,0,0,0,88.68,45c6.44,4.75,11.95,5.4,17.45,2.13,4.78-2.85,7.7-8.5,6.76-13.85-1.38-8-6.52-12-14.43-12.57C95.82,10.83,89.79,4.26,79.75,2.46,68,.36,59.45,5.51,53.73,15.7\"/><path class=\"cls-3\" d=\"M63.32,29.35H63a24,24,0,0,0-47,.87l-.87,0a13.89,13.89,0,0,0-5.53,1.6A14.38,14.38,0,0,0,7.2,33.43c-.4.33-.79.67-1.17,1A10.11,10.11,0,0,0,4,37a13.24,13.24,0,0,0-1.13,2.39C.28,47.32,4,53.28,8.23,56.13s11.5,4,17.85-1.57a24,24,0,0,0,27,0A14.67,14.67,0,1,0,63.32,29.35Z\"/></g></g></svg>',\n  'partly-cloudy-day':\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 121.88 62.82\"><defs><style>.cls-1{fill:#f5b952;}.cls-2{fill:#aac7d5;}.cls-3{fill:#cae3f6;}.cls-4{fill:none;stroke:#000;stroke-miterlimit:10;stroke-width:4px;}</style></defs><title>partly-cloudy-dayAsset 181colored</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M22.18,2.35a20.1,20.1,0,1,0,20.1,20.1A20.13,20.13,0,0,0,22.18,2.35Z\"/><path class=\"cls-2\" d=\"M83.58,51.66a1.27,1.27,0,0,1,.78-.46,25,25,0,0,0,11.13-4.11c6.44,4.75,12,5.41,17.45,2.13,4.78-2.85,7.71-8.49,6.77-13.84-1.39-8-6.53-12-14.43-12.58C102.64,13,96.6,6.38,86.56,4.59c-11.74-2.1-20.29,3.05-26,13.23\"/><path class=\"cls-3\" d=\"M70.14,31.47l-.36,0a24,24,0,0,0-47,.87c-.29,0-.58,0-.87,0A14.27,14.27,0,0,0,16.37,34,14.8,14.8,0,0,0,14,35.56a14.06,14.06,0,0,0-1.17,1,10.07,10.07,0,0,0-2.06,2.5,13.13,13.13,0,0,0-1.13,2.4c-2.57,8,1.16,13.9,5.38,16.75,4.38,3,11.5,4,17.86-1.56a24,24,0,0,0,27,0A14.67,14.67,0,1,0,70.14,31.47Z\"/><path class=\"cls-4\" d=\"M39.79,13.71A19.75,19.75,0,1,0,11.21,38.44\"/><path class=\"cls-4\" d=\"M83.58,51.66a1.27,1.27,0,0,1,.78-.46,25,25,0,0,0,11.13-4.11c6.44,4.75,12,5.41,17.45,2.13,4.78-2.85,7.71-8.49,6.77-13.84-1.39-8-6.53-12-14.43-12.58C102.64,13,96.6,6.38,86.56,4.59c-11.74-2.1-20.29,3.05-26,13.23\"/><path class=\"cls-4\" d=\"M70.14,31.47l-.36,0a24,24,0,0,0-47,.87c-.29,0-.58,0-.87,0A14.27,14.27,0,0,0,16.37,34,14.8,14.8,0,0,0,14,35.56a14.06,14.06,0,0,0-1.17,1,10.07,10.07,0,0,0-2.06,2.5,13.13,13.13,0,0,0-1.13,2.4c-2.57,8,1.16,13.9,5.38,16.75,4.38,3,11.5,4,17.86-1.56a24,24,0,0,0,27,0A14.67,14.67,0,1,0,70.14,31.47Z\"/></g></g></svg>',\n  'partly-cloudy-night':\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 117.22 62.47\"><defs><style>.cls-1{fill:#f5b952;}.cls-2{fill:#aac7d5;}.cls-3{fill:#cae3f6;}.cls-4{fill:none;stroke:#000;stroke-miterlimit:10;stroke-width:4px;}</style></defs><title>partly-cloudy-night Asset 182colored</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M18.58,30a19.63,19.63,0,0,1-1.65-11.06A24.21,24.21,0,0,1,23.29,6.56a32.14,32.14,0,0,1,2.84-2.74,16.28,16.28,0,0,0-4.08-1.45A16.57,16.57,0,0,0,6.2,29.6a16.23,16.23,0,0,0,5.51,4\"/><path class=\"cls-2\" d=\"M78.93,51.52a1.23,1.23,0,0,1,.77-.46A25,25,0,0,0,90.83,47c6.44,4.75,12,5.41,17.45,2.13,4.78-2.85,7.71-8.49,6.77-13.84-1.39-8-6.53-12-14.43-12.58C98,12.82,91.94,6.24,81.9,4.45c-11.74-2.1-20.29,3.05-26,13.23\"/><path class=\"cls-3\" d=\"M65.48,31.33l-.36,0a24,24,0,0,0-47,.87c-.29,0-.58,0-.87,0a14,14,0,0,0-5.52,1.59,14.44,14.44,0,0,0-2.36,1.57,14.21,14.21,0,0,0-1.17,1A10,10,0,0,0,6.13,39,13.49,13.49,0,0,0,5,41.36c-2.57,8,1.16,13.91,5.38,16.76,4.38,3,11.5,4,17.86-1.57a24,24,0,0,0,27,0A14.67,14.67,0,1,0,65.48,31.33Z\"/><path class=\"cls-4\" d=\"M18.58,30a19.63,19.63,0,0,1-1.65-11.06A24.21,24.21,0,0,1,23.29,6.56a32.14,32.14,0,0,1,2.84-2.74,16.28,16.28,0,0,0-4.08-1.45A16.57,16.57,0,0,0,6.2,29.6a16.23,16.23,0,0,0,5.51,4\"/><path class=\"cls-4\" d=\"M78.93,51.31a1.29,1.29,0,0,1,.77-.47,24.84,24.84,0,0,0,11.13-4.1c6.44,4.75,12,5.41,17.45,2.13C113.06,46,116,40.38,115.05,35c-1.39-8-6.53-12-14.43-12.58C98,12.61,91.94,6,81.9,4.24c-11.74-2.1-20.29,3.05-26,13.23\"/><path class=\"cls-4\" d=\"M65.48,31.12l-.36,0a24,24,0,0,0-47,.87l-.87,0a14.06,14.06,0,0,0-5.52,1.6,14.44,14.44,0,0,0-2.36,1.57,14.06,14.06,0,0,0-1.17,1,9.89,9.89,0,0,0-2.06,2.5A13.24,13.24,0,0,0,5,41.14c-2.57,8,1.16,13.91,5.38,16.76,4.38,3,11.5,4,17.86-1.56a24,24,0,0,0,27-.05A14.67,14.67,0,1,0,65.48,31.12Z\"/></g></g></svg>',\n  'clear-day':\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 57.47 57.47\"><defs><style>.cls-1{fill:#f5b952;}.cls-2,.cls-3{fill:none;stroke:#000;stroke-miterlimit:10;stroke-width:3px;}.cls-2{stroke-linecap:round;}</style></defs><title>clear-dayAsset 222colored</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M28.7,43.71h0a14.86,14.86,0,1,0,0-29.71h.05a14.86,14.86,0,1,0,0,29.71H28.7Z\"/><line class=\"cls-2\" x1=\"8.55\" y1=\"28.73\" x2=\"1.5\" y2=\"28.73\"/><line class=\"cls-2\" x1=\"14.15\" y1=\"42.85\" x2=\"9.07\" y2=\"47.75\"/><line class=\"cls-2\" x1=\"14.75\" y1=\"14.28\" x2=\"9.82\" y2=\"9.24\"/><line class=\"cls-2\" x1=\"10.03\" y1=\"36.46\" x2=\"3.51\" y2=\"39.14\"/><line class=\"cls-2\" x1=\"21.11\" y1=\"10.12\" x2=\"18.39\" y2=\"3.62\"/><line class=\"cls-2\" x1=\"20.57\" y1=\"47.38\" x2=\"17.75\" y2=\"53.85\"/><line class=\"cls-2\" x1=\"10.25\" y1=\"20.74\" x2=\"3.78\" y2=\"17.95\"/><path class=\"cls-3\" d=\"M28.7,43.71h0a14.86,14.86,0,1,0,0-29.71h.05a14.86,14.86,0,1,0,0,29.71H28.7Z\"/><line class=\"cls-2\" x1=\"48.92\" y1=\"28.73\" x2=\"55.97\" y2=\"28.73\"/><line class=\"cls-2\" x1=\"28.73\" y1=\"8.55\" x2=\"28.73\" y2=\"1.5\"/><line class=\"cls-2\" x1=\"28.73\" y1=\"48.92\" x2=\"28.73\" y2=\"55.97\"/><line class=\"cls-2\" x1=\"43.32\" y1=\"42.85\" x2=\"48.39\" y2=\"47.75\"/><line class=\"cls-2\" x1=\"42.72\" y1=\"14.28\" x2=\"47.65\" y2=\"9.24\"/><line class=\"cls-2\" x1=\"47.44\" y1=\"36.46\" x2=\"53.96\" y2=\"39.14\"/><line class=\"cls-2\" x1=\"36.36\" y1=\"10.12\" x2=\"39.08\" y2=\"3.62\"/><line class=\"cls-2\" x1=\"36.89\" y1=\"47.38\" x2=\"39.72\" y2=\"53.85\"/><line class=\"cls-2\" x1=\"47.21\" y1=\"20.74\" x2=\"53.69\" y2=\"17.95\"/></g></g></svg>',\n  'clear-night':\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 39.11 40.96\"><defs><style>.cls-1{fill:#f5b952;}.cls-2{fill:none;stroke:#000;stroke-miterlimit:10;stroke-width:3px;}</style></defs><title>clear-nightAsset 221colored</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M30.56,34.05h0a13.57,13.57,0,1,1,0-27.13,13.79,13.79,0,0,1,3.71.52,19,19,0,1,0-13.79,32h0a18.94,18.94,0,0,0,13.78-5.94A14.15,14.15,0,0,1,30.56,34.05Z\"/><path class=\"cls-2\" d=\"M30.56,34.05h0a13.57,13.57,0,1,1,0-27.13,13.79,13.79,0,0,1,3.71.52,19,19,0,1,0-13.79,32h0a18.94,18.94,0,0,0,13.78-5.94A14.15,14.15,0,0,1,30.56,34.05Z\"/></g></g></svg>',\n};\n\n// Get weather icon based on condition\nfunction getWeatherIcon(weatherCondition) {\n  return weatherIcons[weatherCondition] || '?';\n}\n\nexport { getUVColor, getWeatherIcon };\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { transpose } from \"../../transpose.mjs\";\nimport { constructFrom } from \"../../constructFrom.mjs\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateToSystemTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, Date));\n  }\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? constructFrom(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.mjs\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.mjs\";\nimport { numericPatterns } from \"./constants.mjs\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { addDays } from \"./addDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const currentDay = _date.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.mjs\";\nimport { getISODay } from \"./getISODay.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day) {\n  const _date = toDate(date);\n  const currentDay = getISODay(_date);\n  const diff = day - currentDay;\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date) {\n  const _date = toDate(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { EraParser } from \"./parsers/EraParser.mjs\";\nimport { YearParser } from \"./parsers/YearParser.mjs\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.mjs\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.mjs\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.mjs\";\nimport { QuarterParser } from \"./parsers/QuarterParser.mjs\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.mjs\";\nimport { MonthParser } from \"./parsers/MonthParser.mjs\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.mjs\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.mjs\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.mjs\";\nimport { DateParser } from \"./parsers/DateParser.mjs\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.mjs\";\nimport { DayParser } from \"./parsers/DayParser.mjs\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.mjs\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.mjs\";\nimport { ISODayParser } from \"./parsers/ISODayParser.mjs\";\nimport { AMPMParser } from \"./parsers/AMPMParser.mjs\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.mjs\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.mjs\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.mjs\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.mjs\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.mjs\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.mjs\";\nimport { MinuteParser } from \"./parsers/MinuteParser.mjs\";\nimport { SecondParser } from \"./parsers/SecondParser.mjs\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.mjs\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.mjs\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.mjs\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.mjs\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const _date = toDate(date);\n  const diff = getWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDefaultOptions } from \"./getDefaultOptions.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { parsers } from \"./parse/_lib/parsers.mjs\";\nimport { DateToSystemTimezoneSetter } from \"./parse/_lib/Setter.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (formatStr === \"\") {\n    if (dateStr === \"\") {\n      return toDate(referenceDate);\n    } else {\n      return constructFrom(referenceDate, NaN);\n    }\n  }\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  const setters = [new DateToSystemTimezoneSetter()];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return constructFrom(referenceDate, NaN);\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return constructFrom(referenceDate, NaN);\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate);\n\n  if (isNaN(date.getTime())) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return constructFrom(referenceDate, NaN);\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return constructFrom(referenceDate, date);\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","import { getUVColor, getWeatherIcon } from './utils';\nimport { format, parse } from 'date-fns';\n\n// Display loader\nfunction displayLoader() {\n  // Display loader element\n  const loader = document.querySelector('.loader');\n  loader.style.display = 'block';\n\n  // Hide error msg\n  const errorMsg = document.querySelector('.error-msg');\n  errorMsg.style.display = 'none';\n\n  // Hide forecast container till finished loading\n  const forecastCtn = document.querySelector('.forecast-container');\n  forecastCtn.style.display = 'none';\n}\n\n// Display error msg\nfunction displayErrorMsg(error) {\n  // Remove loader\n  const loader = document.querySelector('.loader');\n  loader.style.display = 'none';\n\n  // Hide forecast ctn\n  const forecastCtn = document.querySelector('.forecast-container');\n  forecastCtn.style.display = 'none';\n\n  // Create error msg el\n  const errorMsg = document.querySelector('.error-msg');\n  errorMsg.textContent = error;\n  errorMsg.style.display = 'block';\n}\n\n// Render forecast data\nfunction renderForecastData(data) {\n  // Hide loader\n  const loader = document.querySelector('.loader');\n  loader.style.display = 'none';\n\n  // Hide error msg\n  const errorMsg = document.querySelector('.error-msg');\n  errorMsg.style.display = 'none';\n\n  // Display forecast ctn\n  const forecastCtn = document.querySelector('.forecast-container');\n  forecastCtn.style.display = 'block';\n\n  const location = document.getElementById('location');\n  const datetime = document.getElementById('datetime');\n  const weatherIconCtn = document.getElementById('weather-icon-container');\n  const temperature = document.getElementById('temperature');\n  const weatherCondition = document.getElementById('weather-condition');\n  const feelsLike = document.getElementById('feels-like');\n  const windSpeed = document.getElementById('wind-speed');\n  const humidity = document.getElementById('humidity');\n  const chanceOfRain = document.getElementById('chance-of-rain');\n  const UVIndex = document.querySelector('.uv-index-color');\n  const sunrise = document.getElementById('sunrise');\n  const sunset = document.getElementById('sunset');\n\n  location.textContent = data.resolvedAddress;\n  datetime.textContent =\n    format(data.days[0].datetime, 'MMMM dd, yyyy') +\n    ' | ' +\n    format(\n      parse(data.currentConditions.datetime, 'HH:mm:ss', new Date()),\n      'hh:mm a',\n    );\n  weatherIconCtn.innerHTML = getWeatherIcon(data.currentConditions.icon);\n  temperature.textContent = data.currentConditions.temp + '°C';\n  weatherCondition.textContent = data.currentConditions.conditions;\n  feelsLike.textContent = `Feels like ${data.currentConditions.feelslike}°C`;\n  windSpeed.textContent = data.currentConditions.windspeed + ' km/h';\n  humidity.textContent = data.currentConditions.humidity + '%';\n  chanceOfRain.textContent = data.days[0].precipprob + '%';\n\n  UVIndex.textContent = data.days[0].uvindex;\n  UVIndex.style.backgroundColor = getUVColor(data.days[0].uvindex);\n\n  sunrise.textContent = format(\n    parse(data.currentConditions.sunrise, 'HH:mm:ss', new Date()),\n    'hh:mm a',\n  );\n  sunset.textContent = format(\n    parse(data.currentConditions.sunset, 'HH:mm:ss', new Date()),\n    'hh:mm a',\n  );\n}\n\nexport { renderForecastData as default, displayLoader, displayErrorMsg };\n","import './style.css';\nimport getLocationForecastData from './api';\nimport renderForecastData, { displayLoader, displayErrorMsg } from './dom';\n\n// Get forecast data of default location- Quezon City, Philippines\ntry {\n  displayLoader();\n  const data = await getLocationForecastData('Quezon City');\n  renderForecastData(data);\n} catch (error) {\n  console.log(error);\n  displayErrorMsg(error);\n}\n\nconst form = document.getElementById('form');\n\nform.addEventListener('submit', async (event) => {\n  const target = event.target;\n  event.preventDefault();\n\n  // Get value from user input and use function to get data\n  const location = target.querySelector('#location-input').value;\n\n  // Display loader as we wait to receive the data from the API\n  displayLoader();\n\n  try {\n    const data = await getLocationForecastData(location);\n    renderForecastData(data);\n  } catch (error) {\n    console.log(error);\n    displayErrorMsg(error);\n  }\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(44);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","attributes","styleElement","nonce","setAttribute","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","async","location","response","fetch","mode","ok","forecastData","json","console","log","weatherIcons","snow","rain","fog","wind","cloudy","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","array","predicate","test","findIndex","object","Object","prototype","hasOwnProperty","call","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","tokenValue","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","toDate","argument","argStr","Date","constructor","NaN","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","constructFrom","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","cleanDate","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","subject","message","warn","includes","RangeError","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","originalDate","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatter","matched","Setter","subPriority","validate","_utcDate","ValueSetter","validateValue","setValue","priority","super","set","flags","DateToSystemTimezoneSetter","timestampIsSet","fromDate","transpose","Parser","run","dateString","parse","setter","_value","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","isLeapYearIndex","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","setDay","currentDay","delta","setISODay","getISODay","parsers","incompatibleTokens","isTwoDigitYear","normalizedTwoDigitYear","_flags","firstWeekOfYear","setMonth","setWeek","setISOWeek","isLeapYear","subpriority","wholeWeekDays","floor","isPM","setMinutes","setSeconds","setMilliseconds","notWhitespaceRegExp","dateStr","referenceDate","assign","subFnOptions","setters","tokens","usedTokens","parser","incompatibleToken","find","usedToken","fullToken","indexOf","uniquePrioritySetters","sort","filter","setterArray","displayLoader","display","displayErrorMsg","error","errorMsg","textContent","renderForecastData","getElementById","datetime","weatherIconCtn","temperature","weatherCondition","feelsLike","windSpeed","humidity","chanceOfRain","UVIndex","sunrise","sunset","resolvedAddress","days","currentConditions","innerHTML","getWeatherIcon","icon","temp","conditions","feelslike","windspeed","precipprob","uvindex","backgroundColor","getUVColor","addEventListener","event","preventDefault","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Symbol","queue","forEach","fn","r","body","hasAwait","currentDeps","outerResolve","reject","depQueues","Set","promise","Promise","resolve","rej","deps","dep","then","ret","wrapDeps","getResult","fnQueue","has","add","err","getter","__esModule","definition","o","defineProperty","enumerable","get","prop","nc"],"sourceRoot":""}